<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task-3.0.xsd
        http://www.springframework.org/schema/websocket
        http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- CONFIGURATION CXF -->
<!-- 	<import resource="classpath:META-INF/cxf/cxf.xml"/> -->
<!-- 	<import resource="classpath:META-INF/cxf/cxf-extension-xml.xml"/> -->
<!-- 	<import resource="classpath:META-INF/cxf/cxf-servlet.xml"/> -->

	<!-- RESOLVERS DE RESSOURCES ET JSP -->

	<context:property-placeholder location="classpath:alize.properties" />

	<mvc:resources mapping="/resources/**" location="/resources/" />
	<mvc:annotation-driven />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000" />
	</bean>

	<!-- JOOQ -->

	<!-- This is needed if you want to use the @Transactional annotation -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="url" value="${db.url}" />
		<property name="driverClassName" value="${db.driver}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	</bean>

	<!-- Configure Spring's transaction manager to use a DataSource -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- Configure jOOQ's TransactionProvider as a proxy to Spring's transaction 
		manager -->
	<bean id="transactionProvider" class="alize.commun.SpringTransactionProvider">
	</bean>

	<!-- Configure jOOQ's ConnectionProvider to use Spring's TransactionAwareDataSourceProxy, 
		which can dynamically discover the transaction context -->
	<bean id="transactionAwareDataSource"
		class="org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean class="org.jooq.impl.DataSourceConnectionProvider" name="connectionProvider">
		<constructor-arg ref="transactionAwareDataSource" />
	</bean>

	<!-- Configure the DSL object, optionally overriding jOOQ Exceptions with 
		Spring Exceptions -->
	<bean id="dsl" class="org.jooq.impl.DefaultDSLContext">
		<constructor-arg ref="config" />
	</bean>

	<bean id="exceptionTranslator" class="alize.commun.exception.ExceptionTranslator" />

	<bean class="org.jooq.impl.DefaultConfiguration" name="config">
		<constructor-arg index="0" ref="connectionProvider" />
		<constructor-arg index="1">
			<null />
		</constructor-arg>
		<constructor-arg index="2">
			<null />
		</constructor-arg>
		<constructor-arg index="3">
			<null />
		</constructor-arg>
		<constructor-arg index="4">
			<null />
		</constructor-arg>
		<constructor-arg index="5">
			<value type="org.jooq.SQLDialect">MYSQL</value>
		</constructor-arg>
		<constructor-arg index="6">
			<null />
		</constructor-arg>
		<constructor-arg index="7">
			<null />
		</constructor-arg>
	</bean>
	
	<!-- WEBSOCKETS -->
	
	<bean id="websocket" class="alize.eole.websocket.handler.WebsocketEndPoint"/>
	
	<websocket:handlers>
	    <websocket:mapping path="/websocket" handler="websocket"/>
	</websocket:handlers>

	<!-- SERVICES -->

	<bean name="stockageService" class="alize.commun.service.StockageServiceImpl" />
	<bean name="domService" class="alize.nau.service.DOMServiceImpl" />

	<!-- THREADS -->
	
	<bean name="calculTask" class="alize.eole.thread.CalculTask">
		<property name="stockageService" ref="stockageService" />	
		<property name="websocket" ref="websocket" />	
	</bean>
	<bean name="tasks" class="alize.eole.thread.Tasks">
		<property name="calculTask" ref="calculTask" />
	</bean>

	<!-- CONTROLLEURS -->

	<context:component-scan base-package="alize.commun.controlleur" />
	<context:component-scan base-package="alize.nau.controlleur" />
	<context:component-scan base-package="alize.eole.controlleur" />

</beans>